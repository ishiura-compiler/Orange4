+{
  execute => sub {
    my $config     = shift;
    my $exec_error = [];
    my $error_msg  = "";
    my $command    = "./$config->{exec_file}";
    
    print STDERR "$command\n" if $config->{debug_mode};
    
    # Execute the command
    my $output = `$command 2>&1`;
    my $count  = 0;
    
    unless ( $output =~ /(OK|NG)/ ) {
      if ( $output eq "" ) {
        # Re-execute the command
        $output = `$command 2>&1 3>&1`;
      }
      if ( $output eq "" ) {
        print "\@OK\@";
      }
    }
    else {
      my @lines = split m{\n}, $output;
      for my $line (@lines) {
        if ( $line =~ /NG/ ) {
          $count++;
          push @$exec_error, $count;
          print "$line\n";
          $error_msg .= "$line\n";
        }
        else { ; }
      }
      if ( $count == 0 ) {
        print "\@OK\@";
      }
    }
    
    # error_msg  ... Error message for LOG
    # exec_error ... Numbers of the errored arithmetic expression
    # (succeess:no array elements, fail:some array elements)
    # command    ... Command for reproducing
    return ( $error_msg, $exec_error, $command );
  },
}